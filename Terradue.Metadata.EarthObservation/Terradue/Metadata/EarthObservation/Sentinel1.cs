// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>Terradue.Metadata.EarthObservation</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>True</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>True</GenerateDataContracts><CodeBaseTag>Net40</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace Terradue.Metadata.EarthObservation
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.Generic;
    using System.Runtime.Serialization;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName = "EarthObservationType", Namespace = "http://www.opengis.net/sen1/2.0")]
    [System.Xml.Serialization.XmlRootAttribute("EarthObservation", Namespace = "http://www.opengis.net/sen1/2.0", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EarthObservationType2", Namespace = "http://www.opengis.net/sen1/2.0")]
    public partial class EarthObservationType2 : EarthObservationType1, System.ComponentModel.INotifyPropertyChanged
    {

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

  
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName = "AcquisitionType", Namespace = "http://www.opengis.net/sen1/2.0")]
    [System.Xml.Serialization.XmlRootAttribute("Acquisition", Namespace = "http://www.opengis.net/sen1/2.0", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "AcquisitionType2", Namespace = "http://www.opengis.net/sen1/2.0")]
    public partial class AcquisitionType2 : AcquisitionType1, System.ComponentModel.INotifyPropertyChanged
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string polarisationMode1Field;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string polarisationChannels1Field;

        [System.Xml.Serialization.XmlElementAttribute("polarisationMode", Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string polarisationMode1
        {
            get
            {
                return this.polarisationMode1Field;
            }
            set
            {
                if ((this.polarisationMode1Field != null))
                {
                    if ((polarisationMode1Field.Equals(value) != true))
                    {
                        this.polarisationMode1Field = value;
                        this.OnPropertyChanged("polarisationMode1");
                    }
                }
                else
                {
                    this.polarisationMode1Field = value;
                    this.OnPropertyChanged("polarisationMode1");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("polarisationChannels", Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string polarisationChannels1
        {
            get
            {
                return this.polarisationChannels1Field;
            }
            set
            {
                if ((this.polarisationChannels1Field != null))
                {
                    if ((polarisationChannels1Field.Equals(value) != true))
                    {
                        this.polarisationChannels1Field = value;
                        this.OnPropertyChanged("polarisationChannels1");
                    }
                }
                else
                {
                    this.polarisationChannels1Field = value;
                    this.OnPropertyChanged("polarisationChannels1");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

   

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName = "DQ_Element_PropertyType", Namespace = "http://www.opengis.net/sen1/2.0")]
    [System.Xml.Serialization.XmlRootAttribute("DQ_Element_PropertyType", Namespace = "http://www.opengis.net/sen1/2.0", IsNullable = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DQ_Element_PropertyType1", Namespace = "http://www.opengis.net/sen1/2.0")]
    public partial class DQ_Element_PropertyType1 : DQ_Element_PropertyType, System.ComponentModel.INotifyPropertyChanged
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private QualityDisclaimerType qualityDisclaimerField;

        /// <summary>
        /// DQ_Element_PropertyType1 class constructor
        /// </summary>
        public DQ_Element_PropertyType1()
        {
            this.qualityDisclaimerField = new QualityDisclaimerType();
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public QualityDisclaimerType qualityDisclaimer
        {
            get
            {
                return this.qualityDisclaimerField;
            }
            set
            {
                if ((this.qualityDisclaimerField != null))
                {
                    if ((qualityDisclaimerField.Equals(value) != true))
                    {
                        this.qualityDisclaimerField = value;
                        this.OnPropertyChanged("qualityDisclaimer");
                    }
                }
                else
                {
                    this.qualityDisclaimerField = value;
                    this.OnPropertyChanged("qualityDisclaimer");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.opengis.net/sen1/2.0")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.opengis.net/sen1/2.0", IsNullable = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "QualityDisclaimerType", Namespace = "http://www.opengis.net/sen1/2.0")]
    public partial class QualityDisclaimerType : System.ComponentModel.INotifyPropertyChanged
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool oQC_FailedField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool oQC_FailedFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool oQC_UpdatedField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool oQC_UpdatedFieldSpecified;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private List<QCResultType> offQC_ResultField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string offQC_DescriptionField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string disclaimerField;

        /// <summary>
        /// QualityDisclaimerType class constructor
        /// </summary>
        public QualityDisclaimerType()
        {
            this.offQC_ResultField = new List<QCResultType>();
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OQC_Failed
        {
            get
            {
                return this.oQC_FailedField;
            }
            set
            {
                if ((oQC_FailedField.Equals(value) != true))
                {
                    this.oQC_FailedField = value;
                    this.OnPropertyChanged("OQC_Failed");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OQC_FailedSpecified
        {
            get
            {
                return this.oQC_FailedFieldSpecified;
            }
            set
            {
                if ((oQC_FailedFieldSpecified.Equals(value) != true))
                {
                    this.oQC_FailedFieldSpecified = value;
                    this.OnPropertyChanged("OQC_FailedSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OQC_Updated
        {
            get
            {
                return this.oQC_UpdatedField;
            }
            set
            {
                if ((oQC_UpdatedField.Equals(value) != true))
                {
                    this.oQC_UpdatedField = value;
                    this.OnPropertyChanged("OQC_Updated");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OQC_UpdatedSpecified
        {
            get
            {
                return this.oQC_UpdatedFieldSpecified;
            }
            set
            {
                if ((oQC_UpdatedFieldSpecified.Equals(value) != true))
                {
                    this.oQC_UpdatedFieldSpecified = value;
                    this.OnPropertyChanged("OQC_UpdatedSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("OffQC_Result", Order = 2)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<QCResultType> OffQC_Result
        {
            get
            {
                return this.offQC_ResultField;
            }
            set
            {
                if ((this.offQC_ResultField != null))
                {
                    if ((offQC_ResultField.Equals(value) != true))
                    {
                        this.offQC_ResultField = value;
                        this.OnPropertyChanged("OffQC_Result");
                    }
                }
                else
                {
                    this.offQC_ResultField = value;
                    this.OnPropertyChanged("OffQC_Result");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OffQC_Description
        {
            get
            {
                return this.offQC_DescriptionField;
            }
            set
            {
                if ((this.offQC_DescriptionField != null))
                {
                    if ((offQC_DescriptionField.Equals(value) != true))
                    {
                        this.offQC_DescriptionField = value;
                        this.OnPropertyChanged("OffQC_Description");
                    }
                }
                else
                {
                    this.offQC_DescriptionField = value;
                    this.OnPropertyChanged("OffQC_Description");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(DataType = "anyURI", Order = 4)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Disclaimer
        {
            get
            {
                return this.disclaimerField;
            }
            set
            {
                if ((this.disclaimerField != null))
                {
                    if ((disclaimerField.Equals(value) != true))
                    {
                        this.disclaimerField = value;
                        this.OnPropertyChanged("Disclaimer");
                    }
                }
                else
                {
                    this.disclaimerField = value;
                    this.OnPropertyChanged("Disclaimer");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.opengis.net/sen1/2.0")]
    public enum QCResultType
    {

        /// <remarks/>
        NOMINAL_DATA_QUALITY,

        /// <remarks/>
        DEGRADED_PRODUCT_RADIOMETRY,

        /// <remarks/>
        DEGRADED_PRODUCT_GEOLOCATION,

        /// <remarks/>
        DEGRADED_RADIOMETRIC_CALIBRATION,

        /// <remarks/>
        DEGRADED_PLATFORM_POINTING,

        /// <remarks/>
        DEGRADED_ORBIT_CONTROL,

        /// <remarks/>
        DEGRADED_PERFORMANCE_INSTRUMENT_ANOMALY,

        /// <remarks/>
        COMPLETE_PRODUCT_DEGRADATION,

        /// <remarks/>
        SLICE_PRODUCT_NON_CONCATENABLE,
    }



  

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName = "EarthObservationResultType", Namespace = "http://www.opengis.net/sen1/2.0")]
    [System.Xml.Serialization.XmlRootAttribute("EarthObservationResult", Namespace = "http://www.opengis.net/sen1/2.0", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EarthObservationResultType1", Namespace = "http://www.opengis.net/sen1/2.0")]
    public partial class EarthObservationResultType1 : EarthObservationResultType, System.ComponentModel.INotifyPropertyChanged
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private TimelinessType timelinessField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool timelinessFieldSpecified;

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelinessType timeliness
        {
            get
            {
                return this.timelinessField;
            }
            set
            {
                if ((timelinessField.Equals(value) != true))
                {
                    this.timelinessField = value;
                    this.OnPropertyChanged("timeliness");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool timelinessSpecified
        {
            get
            {
                return this.timelinessFieldSpecified;
            }
            set
            {
                if ((timelinessFieldSpecified.Equals(value) != true))
                {
                    this.timelinessFieldSpecified = value;
                    this.OnPropertyChanged("timelinessSpecified");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.opengis.net/sen1/2.0")]
    public enum TimelinessType
    {

        /// <remarks/>
        NRT_10M,

        /// <remarks/>
        NRT_1H,

        /// <remarks/>
        NRT_3H,

        /// <remarks/>
        FAST_24H,

        /// <remarks/>
        ARCH_6H,

        /// <remarks/>
        ARCH_RUSH,

        /// <remarks/>
        ARCH_NORMAL,
    }

  

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName = "EarthObservationPropertyType", Namespace = "http://www.opengis.net/sen1/2.0")]
    [System.Xml.Serialization.XmlRootAttribute("EarthObservationPropertyType", Namespace = "http://www.opengis.net/sen1/2.0", IsNullable = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EarthObservationPropertyType1", Namespace = "http://www.opengis.net/sen1/2.0")]
    public partial class EarthObservationPropertyType1 : System.ComponentModel.INotifyPropertyChanged
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EarthObservationType2 earthObservationField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string nilReasonField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string remoteSchemaField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool ownsField;

        public EarthObservationPropertyType1()
        {
            this.earthObservationField = new EarthObservationType2();
            this.ownsField = false;
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EarthObservationType2 EarthObservation
        {
            get
            {
                return this.earthObservationField;
            }
            set
            {
                if ((this.earthObservationField != null))
                {
                    if ((earthObservationField.Equals(value) != true))
                    {
                        this.earthObservationField = value;
                        this.OnPropertyChanged("EarthObservation");
                    }
                }
                else
                {
                    this.earthObservationField = value;
                    this.OnPropertyChanged("EarthObservation");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nilReason
        {
            get
            {
                return this.nilReasonField;
            }
            set
            {
                if ((this.nilReasonField != null))
                {
                    if ((nilReasonField.Equals(value) != true))
                    {
                        this.nilReasonField = value;
                        this.OnPropertyChanged("nilReason");
                    }
                }
                else
                {
                    this.nilReasonField = value;
                    this.OnPropertyChanged("nilReason");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.opengis.net/gml/3.2", DataType = "anyURI")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remoteSchema
        {
            get
            {
                return this.remoteSchemaField;
            }
            set
            {
                if ((this.remoteSchemaField != null))
                {
                    if ((remoteSchemaField.Equals(value) != true))
                    {
                        this.remoteSchemaField = value;
                        this.OnPropertyChanged("remoteSchema");
                    }
                }
                else
                {
                    this.remoteSchemaField = value;
                    this.OnPropertyChanged("remoteSchema");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool owns
        {
            get
            {
                return this.ownsField;
            }
            set
            {
                if ((ownsField.Equals(value) != true))
                {
                    this.ownsField = value;
                    this.OnPropertyChanged("owns");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

  

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.opengis.net/sen1/2.0")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.opengis.net/sen1/2.0", IsNullable = true)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EarthObservationMetadataPropertyType", Namespace = "http://www.opengis.net/sen1/2.0")]
    public partial class EarthObservationMetadataPropertyType : System.ComponentModel.INotifyPropertyChanged
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private EarthObservationMetadataType earthObservationMetadataField;

        [EditorBrowsable(EditorBrowsableState.Never)]
        private bool ownsField;

        public EarthObservationMetadataPropertyType()
        {
            this.earthObservationMetadataField = new EarthObservationMetadataType();
            this.ownsField = false;
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EarthObservationMetadataType EarthObservationMetadata
        {
            get
            {
                return this.earthObservationMetadataField;
            }
            set
            {
                if ((this.earthObservationMetadataField != null))
                {
                    if ((earthObservationMetadataField.Equals(value) != true))
                    {
                        this.earthObservationMetadataField = value;
                        this.OnPropertyChanged("EarthObservationMetadata");
                    }
                }
                else
                {
                    this.earthObservationMetadataField = value;
                    this.OnPropertyChanged("EarthObservationMetadata");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool owns
        {
            get
            {
                return this.ownsField;
            }
            set
            {
                if ((ownsField.Equals(value) != true))
                {
                    this.ownsField = value;
                    this.OnPropertyChanged("owns");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.opengis.net/sen1/2.0")]
    [System.Xml.Serialization.XmlRootAttribute("EarthObservationMetadata", Namespace = "http://www.opengis.net/sen1/2.0", IsNullable = false)]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EarthObservationMetadataType", Namespace = "http://www.opengis.net/sen1/2.0")]
    public partial class EarthObservationMetadataType : EarthObservationMetaDataType, System.ComponentModel.INotifyPropertyChanged
    {

        [EditorBrowsable(EditorBrowsableState.Never)]
        private string parentIdentifier1Field;

        [System.Xml.Serialization.XmlElementAttribute("parentIdentifier", Order = 0)]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parentIdentifier1
        {
            get
            {
                return this.parentIdentifier1Field;
            }
            set
            {
                if ((this.parentIdentifier1Field != null))
                {
                    if ((parentIdentifier1Field.Equals(value) != true))
                    {
                        this.parentIdentifier1Field = value;
                        this.OnPropertyChanged("parentIdentifier1");
                    }
                }
                else
                {
                    this.parentIdentifier1Field = value;
                    this.OnPropertyChanged("parentIdentifier1");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
